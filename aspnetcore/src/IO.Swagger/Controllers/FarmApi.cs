/*
 * agmet_mobile_version_update 
 *
 * version update
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class FarmApiController : ControllerBase
    { 
        /// <summary>
        /// 작목 재해 정보 조회
        /// </summary>
        /// <remarks>작목의 생육단계에 대한 재해를 알려준다 </remarks>
        /// <param name="farmId">농장 id</param>
        /// <param name="plant">작목 id 기본값은 해당 농가의 우선순위 작목으로 한다. </param>
        /// <param name="growthStage">생육 단계 </param>
        /// <response code="200">응답 성공</response>
        /// <response code="400">invaild parameters</response>
        /// <response code="404">not found</response>
        [HttpGet]
        [Route("/mobile/farm/disaster")]
        [ValidateModelState]
        [SwaggerOperation("MobileFarmDisasterGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<DisasterInfo>), description: "응답 성공")]
        public virtual IActionResult MobileFarmDisasterGet([FromQuery][Required()]int? farmId, [FromQuery][Required()]string plant, [FromQuery][Required()]string growthStage)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<DisasterInfo>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"date\" : \"2020-06-02\",\n  \"burn\" : 0,\n  \"freeze\" : 0,\n  \"lt\" : 3,\n  \"ht\" : 0,\n  \"water\" : 1,\n  \"wind\" : 2\n}, {\n  \"date\" : \"2020-06-02\",\n  \"burn\" : 0,\n  \"freeze\" : 0,\n  \"lt\" : 3,\n  \"ht\" : 0,\n  \"water\" : 1,\n  \"wind\" : 2\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<DisasterInfo>>(exampleJson)
                        : default(List<DisasterInfo>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 로그인 성공 후 화면
        /// </summary>
        /// <remarks>로그인 성공 후 phone_mobile 로 DB를 조회한 뒤 해당 농가의 지역과 작목을 가져온다. </remarks>
        /// <param name="phoneMobile">로그인을 확인하는 요소</param>
        /// <param name="date">날짜를 선택하면 해당 날짜의 데이터를 가져옴 | 기본값은 오늘 날짜</param>
        /// <response code="200">응답 성공</response>
        /// <response code="400">bad input parameter</response>
        [HttpGet]
        [Route("/mobile/farm")]
        [ValidateModelState]
        [SwaggerOperation("MobileFarmGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<InitData>), description: "응답 성공")]
        public virtual IActionResult MobileFarmGet([FromQuery][Required()]string phoneMobile, [FromQuery]string date)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<InitData>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"regionId\" : 111,\n  \"plant\" : [ {\n    \"ko\" : \"사과\",\n    \"growthStage\" : [ \"과실비대초기\", \"과육단계\" ],\n    \"id\" : \"apple\"\n  }, {\n    \"ko\" : \"사과\",\n    \"growthStage\" : [ \"과실비대초기\", \"과육단계\" ],\n    \"id\" : \"apple\"\n  } ],\n  \"regionNm\" : \"고창면 고창리 123-234\",\n  \"farmId\" : 253\n}, {\n  \"regionId\" : 111,\n  \"plant\" : [ {\n    \"ko\" : \"사과\",\n    \"growthStage\" : [ \"과실비대초기\", \"과육단계\" ],\n    \"id\" : \"apple\"\n  }, {\n    \"ko\" : \"사과\",\n    \"growthStage\" : [ \"과실비대초기\", \"과육단계\" ],\n    \"id\" : \"apple\"\n  } ],\n  \"regionNm\" : \"고창면 고창리 123-234\",\n  \"farmId\" : 253\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<InitData>>(exampleJson)
                        : default(List<InitData>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 기상 정보 조회
        /// </summary>
        /// <remarks>해당 지역의 열흘간의 기상정보를 가져온다 </remarks>
        /// <param name="regionId">해당 지역 id</param>
        /// <param name="date">날짜를 선택하면 해당 날짜를 포함한 열흘간의 데이터를 가져옴 | 기본값은 오늘 날짜(yyyy-MM-dd)</param>
        /// <response code="200">응답 성공</response>
        /// <response code="400">invaild parameters</response>
        /// <response code="404">not found</response>
        [HttpGet]
        [Route("/mobile/farm/weahterInfo")]
        [ValidateModelState]
        [SwaggerOperation("MobileFarmWeahterInfoGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<WeatherInfo>), description: "응답 성공")]
        public virtual IActionResult MobileFarmWeahterInfoGet([FromQuery][Required()]int? regionId, [FromQuery]string date)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<WeatherInfo>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"date\" : \"2020년 6월 1일 월요일 오늘\",\n  \"insolation\" : \"24.6MJ/㎡\",\n  \"rainfall\" : \"0.0mm\",\n  \"sunshine\" : \"9.9시간\",\n  \"tmax\" : \"22.0℃\",\n  \"tmin\" : \"5.0℃\",\n  \"wmax\" : \"4.2m/s\",\n  \"wmean\" : \"0.4m/s\"\n}, {\n  \"date\" : \"2020년 6월 1일 월요일 오늘\",\n  \"insolation\" : \"24.6MJ/㎡\",\n  \"rainfall\" : \"0.0mm\",\n  \"sunshine\" : \"9.9시간\",\n  \"tmax\" : \"22.0℃\",\n  \"tmin\" : \"5.0℃\",\n  \"wmax\" : \"4.2m/s\",\n  \"wmean\" : \"0.4m/s\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<WeatherInfo>>(exampleJson)
                        : default(List<WeatherInfo>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 기상특보 조회
        /// </summary>
        /// <remarks>해당 지역의 기상특보를 가져온다 </remarks>
        /// <param name="regionId">해당 지역 id</param>
        /// <response code="200">응답 성공</response>
        [HttpGet]
        [Route("/mobile/farm/weatherReport")]
        [ValidateModelState]
        [SwaggerOperation("MobileFarmWeatherReportGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<WeatherReport>), description: "응답 성공")]
        public virtual IActionResult MobileFarmWeatherReportGet([FromQuery][Required()]int? regionId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<WeatherReport>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"date\" : \"2020년 6월 1일 18시 00분\",\n  \"report\" : \"강풍주의보 발표\"\n}, {\n  \"date\" : \"2020년 6월 1일 18시 00분\",\n  \"report\" : \"강풍주의보 발표\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<WeatherReport>>(exampleJson)
                        : default(List<WeatherReport>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
